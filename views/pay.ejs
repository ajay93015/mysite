<!-- DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>UPI Payment Gateway</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #e0f7fa;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .payment-box {
      background: white;
      padding: 25px;
      border-radius: 12px;
      width: 360px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
      text-align: center;
    }

    .qr {
      width: 200px;
      height: 200px;
      margin: 20px auto;
    }

    .status {
      font-size: 18px;
      margin-top: 10px;
    }

    .loading {
      font-size: 16px;
      color: gray;
    }

    .success {
      color: green;
      font-weight: bold;
      font-size: 20px;
    }
  </style>
</head>
<body>

  <div class="payment-box">
    <h2>Pay ₹5.00</h2>
    <div id="qr-container">
      <p class="loading">Loading payment...</p>
    </div>
    <div class="status" id="status"></div>
  </div>

  <script>
    let paymentConfirmed = false;

    async function loadPayment() {
      if (paymentConfirmed) return;

      try {
        const res = await fetch('https://pnbwork.onrender.com/pay/5.00');
        const data = await res.json();

        const qr = document.getElementById('qr-container');
        const status = document.getElementById('status');

        if (data.success) {
          // Set QR image only once
          qr.innerHTML = `<img class="qr" src="${data.qrImage}" alt="QR Code">`;

          // If already paid
          if (data.message.toLowerCase().includes('success') || data.message.toLowerCase().includes('completed')) {
            paymentConfirmed = true;
            status.innerHTML = `<p class="success">✅ Payment Successful!</p>`;

            // Optional: POST to your backend to mark as confirmed
            await fetch('/mark-paid', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ paymentId: data.paymentId })
            });

            return;
          }

          // Otherwise show status
          status.innerHTML = `
            <p><strong>Status:</strong> ${data.message}</p>
            <p><strong>Queue Position:</strong> ${data.queuePosition}</p>
            <p><strong>Time Remaining:</strong> ${data.timeRemaining}s</p>
          `;
        } else {
          qr.innerHTML = `<p class="loading">Failed to load payment info.</p>`;
        }
      } catch (err) {
        document.getElementById('qr-container').innerHTML = `<p class="loading">Error: ${err.message}</p>`;
      }
    }

    // First load
    loadPayment();

    // Refresh every 5 seconds until paid
    setInterval(loadPayment, 5000);
  </script>

</body>
</html> -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Gateway</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .payment-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            padding: 40px;
            width: 100%;
            max-width: 500px;
            position: relative;
            overflow: hidden;
        }

        .payment-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .payment-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .payment-header h1 {
            color: #333;
            font-size: 2.5em;
            margin-bottom: 10px;
            font-weight: 300;
        }

        .payment-header p {
            color: #666;
            font-size: 1.1em;
        }

        .form-group {
            margin-bottom: 25px;
            position: relative;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 500;
            font-size: 0.9em;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .form-group input, .form-group select {
            width: 100%;
            padding: 15px;
            border: 2px solid #e1e1e1;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .form-group input:focus, .form-group select:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .amount-display {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 20px;
            border-radius: 15px;
            text-align: center;
            margin-bottom: 30px;
            font-size: 1.5em;
            font-weight: bold;
        }

        .payment-methods {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
            margin-bottom: 30px;
        }

        .payment-method {
            padding: 15px;
            border: 2px solid #e1e1e1;
            border-radius: 10px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .payment-method:hover {
            border-color: #667eea;
            transform: translateY(-2px);
        }

        .payment-method.selected {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.1);
        }

        .payment-method img {
            width: 40px;
            height: 40px;
            margin-bottom: 8px;
        }

        .btn {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 1.1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .loading {
            display: none;
            text-align: center;
            margin-top: 20px;
        }

        .loading .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .result {
            display: none;
            margin-top: 25px;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
        }

        .result.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .result.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .verification-section {
            display: none;
            margin-top: 30px;
            padding: 25px;
            background: #f8f9fa;
            border-radius: 15px;
            border: 2px solid #e1e1e1;
        }

        .verification-section h3 {
            color: #333;
            margin-bottom: 20px;
            text-align: center;
        }

        .transaction-details {
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .detail-row:last-child {
            border-bottom: none;
        }

        .detail-label {
            font-weight: 600;
            color: #555;
        }

        .detail-value {
            color: #333;
        }

        @media (max-width: 600px) {
            .payment-container {
                padding: 25px;
            }
            
            .payment-header h1 {
                font-size: 2em;
            }
            
            .payment-methods {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <div class="payment-container">
        <div class="payment-header">
            <h1>💳 Payment Gateway</h1>
            <p>Secure payment processing</p>
        </div>

        <form id="paymentForm">
            <div class="form-group">
                <label for="amount">Amount</label>
                <input type="number" id="amount" name="amount" required min="1" max="100000" placeholder="Enter amount">
            </div>

            <div class="amount-display" id="amountDisplay">
                ₹0.00
            </div>

            <div class="form-group">
                <label>Payment Method</label>
                <div class="payment-methods">
                    <div class="payment-method" data-method="card">
                        <div>💳</div>
                        <div>Card</div>
                    </div>
                    <div class="payment-method" data-method="upi">
                        <div>📱</div>
                        <div>UPI</div>
                    </div>
                    <div class="payment-method" data-method="netbanking">
                        <div>🏦</div>
                        <div>Net Banking</div>
                    </div>
                    <div class="payment-method" data-method="wallet">
                        <div>👛</div>
                        <div>Wallet</div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="customerName">Customer Name</label>
                <input type="text" id="customerName" name="customerName" required placeholder="Enter your full name">
            </div>

            <div class="form-group">
                <label for="customerEmail">Email Address</label>
                <input type="email" id="customerEmail" name="customerEmail" required placeholder="Enter your email">
            </div>

            <div class="form-group">
                <label for="customerPhone">Phone Number</label>
                <input type="tel" id="customerPhone" name="customerPhone" required placeholder="Enter your phone number">
            </div>

            <button type="submit" class="btn" id="payButton">
                Process Payment
            </button>
        </form>

        <div class="loading" id="loading">
            <div class="spinner"></div>
            <p>Processing your payment...</p>
        </div>

        <div class="result" id="result"></div>

        <div class="verification-section" id="verificationSection">
            <h3>🔍 Payment Verification</h3>
            <p>Your payment has been processed. Here are the transaction details:</p>
            <div class="transaction-details" id="transactionDetails"></div>
            <button type="button" class="btn" id="verifyButton" style="margin-top: 20px;">
                Verify Payment Status
            </button>
        </div>
    </div>

    <script>
        $(document).ready(function() {
            let selectedPaymentMethod = '';
            let transactionId = '';

            // Update amount display
            $('#amount').on('input', function() {
                const amount = parseFloat($(this).val()) || 0;
                $('#amountDisplay').text(`₹${amount.toFixed(2)}`);
            });

            // Payment method selection
            $('.payment-method').on('click', function() {
                $('.payment-method').removeClass('selected');
                $(this).addClass('selected');
                selectedPaymentMethod = $(this).data('method');
            });

            // Form submission
            $('#paymentForm').on('submit', function(e) {
                e.preventDefault();
                
                const amount = parseFloat($('#amount').val());
                const customerName = $('#customerName').val();
                const customerEmail = $('#customerEmail').val();
                const customerPhone = $('#customerPhone').val();

                // Validation
                if (!amount || amount <= 0) {
                    showResult('Please enter a valid amount', 'error');
                    return;
                }

                if (!selectedPaymentMethod) {
                    showResult('Please select a payment method', 'error');
                    return;
                }

                if (!customerName || !customerEmail || !customerPhone) {
                    showResult('Please fill in all required fields', 'error');
                    return;
                }

                // Show loading
                $('#loading').show();
                $('#payButton').prop('disabled', true);
                hideResult();

                // Process payment
                processPayment(amount);
            });

            // Verify payment button
            $('#verifyButton').on('click', function() {
                if (transactionId) {
                    verifyPayment(transactionId);
                }
            });

            function processPayment(amount) {
                const apiUrl = `https://pnbwork.onrender.com/pay/${amount}`;
                
                fetch(apiUrl)
                    .then(res => {
                        if (!res.ok) {
                            throw new Error(`HTTP error! status: ${res.status}`);
                        }
                        return res.json();
                    })
                    .then(data => {
                        console.log('Pay Passbook Response:', data);
                        
                        // Hide loading
                        $('#loading').hide();
                        $('#payButton').prop('disabled', false);
                        
                        // Generate transaction ID
                        transactionId = generateTransactionId();
                        
                        // Show success message
                        showResult('Payment processed successfully!', 'success');
                        
                        // Show verification section
                        showTransactionDetails(data, amount);
                        
                        // Reset form
                        setTimeout(() => {
                            $('#paymentForm')[0].reset();
                            $('#amountDisplay').text('₹0.00');
                            $('.payment-method').removeClass('selected');
                            selectedPaymentMethod = '';
                        }, 2000);
                    })
                    .catch(err => {
                        console.error('Error:', err);
                        
                        // Hide loading
                        $('#loading').hide();
                        $('#payButton').prop('disabled', false);
                        
                        // Show error message
                        showResult(`Payment failed: ${err.message}`, 'error');
                    });
            }

            function verifyPayment(txnId) {
                $('#verifyButton').prop('disabled', true);
                $('#verifyButton').text('Verifying...');
                
                // Simulate verification (you can replace this with actual verification API)
                setTimeout(() => {
                    const verificationResult = {
                        status: 'SUCCESS',
                        message: 'Payment verified successfully',
                        timestamp: new Date().toISOString()
                    };
                    
                    showResult(`Verification Result: ${verificationResult.message}`, 'success');
                    
                    $('#verifyButton').prop('disabled', false);
                    $('#verifyButton').text('Verify Payment Status');
                }, 2000);
            }

            function showTransactionDetails(data, amount) {
                const customerName = $('#customerName').val();
                const customerEmail = $('#customerEmail').val();
                const customerPhone = $('#customerPhone').val();
                
                const details = `
                    <div class="detail-row">
                        <span class="detail-label">Transaction ID:</span>
                        <span class="detail-value">${transactionId}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Amount:</span>
                        <span class="detail-value">₹${amount.toFixed(2)}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Payment Method:</span>
                        <span class="detail-value">${selectedPaymentMethod.toUpperCase()}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Customer Name:</span>
                        <span class="detail-value">${customerName}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span>
                        <span class="detail-value">${customerEmail}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Phone:</span>
                        <span class="detail-value">${customerPhone}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Status:</span>
                        <span class="detail-value" style="color: green; font-weight: bold;">SUCCESS</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Timestamp:</span>
                        <span class="detail-value">${new Date().toLocaleString()}</span>
                    </div>
                `;
                
                $('#transactionDetails').html(details);
                $('#verificationSection').show();
            }

            function showResult(message, type) {
                const resultDiv = $('#result');
                resultDiv.removeClass('success error');
                resultDiv.addClass(type);
                resultDiv.html(message);
                resultDiv.show();
            }

            function hideResult() {
                $('#result').hide();
            }

            function generateTransactionId() {
                return 'TXN' + Date.now() + Math.random().toString(36).substr(2, 9).toUpperCase();
            }

            // Add some interactive animations
            $('.form-group input, .form-group select').on('focus', function() {
                $(this).parent().addClass('focused');
            });

            $('.form-group input, .form-group select').on('blur', function() {
                $(this).parent().removeClass('focused');
            });
        });
    </script>
</body>
</html>
