<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scan Form</title>
    <style>
        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0,0.9);
        }
        .modal-content {
            margin: auto;
            display: block;
            width: 80%;
            max-width: 700px;
            padding: 20px;
            background-color: #fefefe;
            border: 1px solid #888;
            border-radius: 8px;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
            animation-name: modalopen;
            animation-duration: 0.5s;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
        @keyframes modalopen {
            from {opacity: 0;}
            to {opacity: 1;}
        }

        #video {
            width: 100%;
            height: auto;
        }
       #video {
            width: 100%;
            height: auto;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 10px;
        }
        button {
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
          width:100%;
        }
        button:hover {
            background-color: #0056b3;
          
        }
      /* Style for input box */
.input-box {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
    box-sizing: border-box; /* Ensure padding and border are included in the total width/height */
}

/* Style for placeholder text */
.input-box::placeholder {
    color: #999; /* Placeholder text color */
}

/* Style for focused input box */
.input-box:focus {
    outline: none; /* Remove default focus outline */
    border-color: #007bff; /* Change border color when focused */
}

    </style>
</head>
<body>
    <h1>Scan Form</h1>
    <video id="video" autoplay></video><br>
    <button onclick="capturePhoto()">Capture Photo</button><br>
    
    <!-- Modal dialog for displaying captured photo and asking for name -->
    <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <img id="capturedPhoto" src="" alt="Captured Photo" style="max-width: 100%;">
            <br>
            <label for="photoName">Enter Photo Name:</label>
            <input type="text" class="input-box" id="photoName" placeholder="Enter Photo Name">
            <button onclick="submitPhoto()">Submit</button>
        </div>
    </div>

    <script>
        const video = document.getElementById('video');
        const modal = document.getElementById('myModal');
        const capturedPhoto = document.getElementById('capturedPhoto');

        // Access the back camera
        function accessBackCamera() {
            return navigator.mediaDevices.enumerateDevices()
                .then(devices => {
                    const backCamera = devices.find(device => device.kind === 'videoinput' && device.label.toLowerCase().includes('back'));
                    const constraints = {
                        video: {
                            deviceId: backCamera ? { exact: backCamera.deviceId } : undefined
                        }
                    };
                    return navigator.mediaDevices.getUserMedia(constraints);
                })
                .then(stream => {
                    video.srcObject = stream;
                })
                .catch(err => console.error('Access to camera was denied', err));
        }

        // Capture photo
        function capturePhoto() {
            const canvas = document.createElement('canvas');
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            
            // Display the captured photo in the modal
            const photoData = canvas.toDataURL('image/jpeg');
            capturedPhoto.src = photoData;
            modal.style.display = 'block';
          
        }

        // Submit photo
        function submitPhoto() {
            const photoName = document.getElementById('photoName').value;
            const photoData = capturedPhoto.src;
            if (!photoData) {
                console.error("No photo captured.");
                return;
            }
            const link = document.createElement('a');
            link.href = photoData;
            link.download = photoName+'.jpg' || 'photo';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link); // remove the link from the DOM after download
            closeModal(); // close the modal after submission
        }

        // Close modal
        function closeModal() {
            modal.style.display = 'none';
        }

        // Access the back camera when the page loads
        window.addEventListener('DOMContentLoaded', () => {
            accessBackCamera();
        });
      
    </script>
</body>
</html>
